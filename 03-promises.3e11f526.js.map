{"mappings":"qhBASA,IAAAA,EAAAC,EAAA,SAoBA,SAASC,EAAcC,EAAUC,GAC/BC,YAAW,KACT,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAiBH,EACnB,uBAAqBH,QAAiBC,MAAW,sBAChDD,QAA8BC,MAEnB,IAAIM,SAAQ,CAACC,EAASC,KACpCN,EACIK,EAAQF,GACRG,EAAOH,EAAe,IAEpBI,MAAKC,GAASC,EAAAf,GAASgB,OAAOC,QAAQH,KAC3CI,OAAMC,GAASJ,EAAAf,GAASgB,OAAOI,QAAQD,IAAO,GAChDf,E,CAhCYiB,SAASC,cAAc,SAC/BC,iBAAiB,UAE1B,SAA8BC,GAC5BA,EAAIC,iBAEJ,MAAMrB,MAAEA,EAAKsB,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,cAAcC,SAE5CC,EAAeC,OAAO3B,EAAMU,OAC5BkB,EAAcD,OAAOJ,EAAOb,OAC5BmB,EAAYF,OAAOL,EAAKZ,OAE9B,IAAK,IAAIoB,EAAI,EAAGA,EAAIF,EAAaE,GAAK,EAAG,CAEvChC,EAAcgC,EADOJ,GAAgBI,EAAI,GAAKD,E","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nimport Notiflix from \"notiflix\";\n\nconst MainForm = document.querySelector('.form');\nMainForm.addEventListener('submit', onHandleButtonSubmit);\n\nfunction onHandleButtonSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n  \n  const initialDelay = Number(delay.value);\n  const totalAmount = Number(amount.value);\n  const stepValue = Number(step.value);\n\n  for (let i = 0; i < totalAmount; i += 1) {\n    const currentDelay = initialDelay + (i - 1) * stepValue;\n    createPromise(i, currentDelay);\n  };\n}\n\nfunction createPromise(position, delay) {\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    const promiseMessage = shouldResolve\n      ? `✅ Fulfilled promise ${position} in ${delay}ms`\n      : `❌ Rejected promise ${position} in ${delay}ms`;\n    \n    const promise = new Promise((resolve, reject) => {\n      shouldResolve\n        ? resolve(promiseMessage)\n        : reject(promiseMessage);\n    });\n    promise.then(value => Notiflix.Notify.success(value))\n      .catch(error => Notiflix.Notify.failure(error));\n  }, delay);\n\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","setTimeout","shouldResolve","Math","random","promiseMessage","Promise","resolve","reject","then","value","$parcel$interopDefault","Notify","success","catch","error","failure","document","querySelector","addEventListener","evt","preventDefault","step","amount","currentTarget","elements","initialDelay","Number","totalAmount","stepValue","i"],"version":3,"file":"03-promises.3e11f526.js.map"}